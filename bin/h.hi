#!/bin/bash
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

current_dir=`pwd`
echo -e "${GREEN}====================${NC}"
echo -e "${GREEN}1. Make sure OneDrive running${NC}"
if [ -d /Applications/OneDrive.app ]; then
    onedrive_running=`ps -ef | grep -i OneDrive | grep -v grep | wc -l`
    if [ $onedrive_running -gt 0 ]; then
        echo "OneDrive running..."
    else
        echo "OneDrive isn't running, open it."
        open /Applications/OneDrive.app
    fi
else
    echo "Please install OneDrive to sync Alfred and KM settings..."
fi

echo -e "${GREEN}====================${NC}"
echo -e "${GREEN}2. Sync Anki${NC}"
if [ -d /Applications/Anki.app ]; then
    anki_running=`ps -ef | grep /Applications/Anki.app/Contents/MacOS/Anki | grep -v grep | wc -l`
    anki_connect_port=8765
    if [ $anki_running -gt 0 ]; then
        lsof -i :$anki_connect_port >/dev/null &>/dev/null
        if [ $? -eq 0 ]; then
            echo "Syncing Anki..."
            curl localhost:$anki_connect_port -X POST -d '{"action": "sync", "version": 6}'
            echo ""
        else
            echo -e "${RED}AnkiConnect add-on isn't running. Please install it: https://foosoft.net/projects/anki-connect/${NC}"
        fi
    else
        echo "Anki isn't running, open it."
        open /Applications/Anki.app
    fi
else
    echo "${RED}Anki isn't ready. Please install it: https://apps.ankiweb.net/${NC}"
fi

echo -e "${GREEN}====================${NC}"
echo -e "${GREEN}3. Sync Git Repo${NC}"
repo_list=(/opt/hfiles /opt/hlibs /opt/km $DOTFILES_ROOT)
for repo_dir in ${repo_list[@]}; do
    if [ -d $repo_dir ]; then
        echo "Syncing $repo_dir..."
        cd $repo_dir && git pull
        if [ $? -gt 0 ]; then
            echo -e "${RED}Error Occur...${NC}"
        else
            echo "Done"
        fi
    fi
done

cd $current_dir
